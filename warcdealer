#!/bin/bash
# Warcdealer
# Version:
export warcdealerVersion='3.1.1'

#Documentation:
#Instructions for using, installing and/or updating to the current version of Warcdealer are available at http://futuramerlin.com/ancillary/warcdealer/.

#Credits: Incorporates a modified version of https://github.com/ludios/grab-site/blob/master/extra_docs/pause_resume_grab_sites.sh


#Script should exit if any operation fails.
set -e

warcdealerUserName=$(sed '1q;d' "$HOME"/.warcdealer.cfg)
[ "$(whoami)" != "$warcdealerUserName" ] && exec sudo -u "$warcdealerUserName" -- "$0" "$@"

warcdealerDiskThresholdTemp=$(sed '2q;d' "$HOME"/.warcdealer.cfg)
warcdealerDiskThreshold=$((warcdealerDiskThresholdTemp * 1024 * 1024))
warcdealerDiskMonitorPartition=$(sed '3q;d' "$HOME"/.warcdealer.cfg)
warcdealerDiskCheckInterval=$(sed '4q;d' "$HOME"/.warcdealer.cfg)
warcdealerDestinationCollection=$(sed '5q;d' "$HOME"/.warcdealer.cfg)
warcdealerArchiveIndexConfig=$(sed '6q;d' "$HOME"/.warcdealer.cfg)
warcdealerWARCBundlingConfig=$(sed '7q;d' "$HOME"/.warcdealer.cfg)
warcdealerInstallationUUID=$(sed '9q;d' "$HOME"/.warcdealer.cfg)

warcdealerArchiveIndexEnabled=true
warcdealerWARCBundlingDisabled=false
if [[ $warcdealerArchiveIndexConfig == "disableArchiveIndex" ]]; then
    warcdealerArchiveIndexEnabled=false
fi
if [[ $warcdealerWARCBundlingConfig == "disableWARCBundling" ]]; then
    warcdealerWARCBundlingDisabled=true
    echo "WARNING! WARC bundling is disabled. Only use this option if you know what you are doing."
fi

warcdealerUUIDRegex='^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
if [[ ! $warcdealerInstallationUUID =~ $warcdealerUUIDRegex ]]; then
    echo "Invalid installation ID."
    exit 1;
fi

if [[ $warcdealerArchiveIndexEnabled == true ]]; then
    echo "Starting viewer"
    mkdir -p ~/.warcdealerViewer
    warcdealerWARCPath=$(pwd)
    cd ~/.warcdealerViewer
    rm -rf ./ArchiveBot
    git clone https://github.com/ArchiveTeam/ArchiveBot.git
    cd ArchiveBot
    cp -f ~/.warcdealer-viewer.patch ./viewer.patch
    perl -pi -e "s/warcdealerIndexQuery/subject:$warcdealerInstallationUUID/g" ./viewer.patch
    patch -p1 <viewer.patch
    cd viewer
    mkdir -p ~/.warcdealerViewer/data/
    python3 -m archivebotviewer --xheaders --prefix /viewer/ --data-dir ~/.warcdealerViewer/data/ &
    warcdealerViewerPID=$!
    function warcdealerStopViewer {
        kill "$warcdealerViewerPID"
    }
    trap warcdealerStopViewer EXIT
    cd "$warcdealerWARCPath"
fi

while true; do
    left=$(df "$warcdealerDiskMonitorPartition" | grep / | sed -r 's/ +/ /g' | cut -f 4 -d ' ')
    if (( left >= warcdealerDiskThreshold )); then
        echo "Disk OK, resuming all grab-sites"
        killall -CONT grab-site
    fi
    if (( left < warcdealerDiskThreshold )); then
        echo "Disk low, pausing all grab-sites and uploading WARCs"
        killall -STOP grab-site
        warcdealerPackID=$(date +%Y-%m-%d-%H-%M-%S-%N)-$(xxd -pu <<< "$(date +%z)")-$(python2 -c 'import uuid; print str(uuid.uuid4())')

        echo "Working on $warcdealerPackID..."

        # shellcheck disable=SC2012
        ls -a -B -l -R -i . | tee "./$warcdealerPackID.listing"
        echo "Building local index..."
        hashdeep -c md5,sha1,sha256,tiger,whirlpool -o fbsd . | tee "./$warcdealerPackID.idx-l"
        echo "Building deep index..."
        hashdeep -c md5,sha1,sha256,tiger,whirlpool -o fbsd -r . | tee "./$warcdealerPackID.idx-d"

        #Ignore exit code 1 from tar on Linux, which indicates files changed while reading; see http://stackoverflow.com/questions/20318852/tar-file-changed-as-we-read-it
        set +e
        tar -cv -P --format pax -f "./$warcdealerPackID.pax" "./$warcdealerPackID.listing" "./$warcdealerPackID.idx-l" "./$warcdealerPackID.idx-d" "$HOME/.warcdealer.cfg"
        exitcode=$?
        if [[ "$exitcode" != "0" ]] && [[ $OSTYPE != *inux* ]]; then
            exit $exitcode
        fi
        if [[ "$exitcode" != "1" ]] && [[ "$exitcode" != "0" ]]; then
            exit $exitcode
        fi
        set -e

        echo "Removing temporary metadata files, now that they are successfully packed."
        rm -v "./$warcdealerPackID.listing" "./$warcdealerPackID.idx-l" "./$warcdealerPackID.idx-d"

        echo "Done preparing metadata; beginning upload."

        find . -maxdepth 1 \( -name "wpull.db" -or -name "*.cdx" -or -name "*.pax" -or -name "*.log" \) -exec xz -C sha256 -9 -e -v '{}' \;

        if [[ $warcdealerWARCBundlingDisabled == true ]]; then
            find . -maxdepth 1 \( -name "*.warc" -or -name "*.gz" -or -name "*.xz" -or -name "*.log" -or -name "*.megawarc" -or -name "*.pem" \) -exec ~/.warcdealer-ia-upload-split '{}' "$warcdealerPackID" "$warcdealerVersion" "$warcdealerInstallationUUID" "$warcdealerDestinationCollection" \;
        else
            find . -maxdepth 1 \( -name "*.warc" -or -name "*.gz" -or -name "*.xz" -or -name "*.log" -or -name "*.megawarc" -or -name "*.pem" \) -exec ~/.warcdealer-ia-upload '{}' "$warcdealerPackID" "$warcdealerVersion" "$warcdealerInstallationUUID" "$warcdealerDestinationCollection" \;
        fi

        echo "Done uploading WARCs."
    fi
    sleep "$warcdealerDiskCheckInterval"
done
